import os

def make_txt_prompt(input):
    prompt = f"""
    # 命令書
あなたは高度な技術を持つチームリーダーです。 以下の指示とレビューコメント案に基づき、中級者の部下が指導内容を深く理解できるような、レビューコメントを作成してください。
# 入力文
{input}
# 回答の条件
- 解答は，「お疲れ様です」から始めてください。
- レビュー対象の文は、部下が書いた文章です。
- 上司の指摘の核となる意図を1～2文で簡潔にまとめること。
- 部下に向けて送るレビューコメントのみを出力すること。
- 部下のことは「あなた」と呼ぶこと。
- 専門用語は適切に使用し、その概念も簡潔に説明すること。
# 思考プロセス
1. レビューコメント案の意図を深く理解する。
2. レビュー対象の文を読んで、指摘内容を全て洗い出す。
3. レビューコメントを作成する。
4. レビューコメントを簡潔にまとめる。
#制限
1.各項目の文章を2行までに制限
2.最初の項目の上に空行を設ける
# 回答の例
 # 入力文（例）
 　８/21と8月22日は在宅勤務とさせていただきます
 # レビューコメント案
 　表記ゆれ
 # 出力例
 　お疲れ様です。「８/21」と「8月22日」の表記が異なっています。統一して「8月21日」と「8月22日」としてください。
 """


    return prompt




def make_csv_prompt(input):
    prompt = f"""
    # 命令書
あなたは高度な技術を持つチームリーダーです。 以下の指示とレビューコメント案に基づき、中級者の部下が指導内容を深く理解できるような、レビューコメントを作成してください。
# 入力文
{input}
# 回答の条件
- 解答は，「お疲れ様です」から始めてください。
- レビュー対象は、部下が作成したcsvファイルです。
- 上司の指摘の核となる意図を1～2文で簡潔にまとめること。
- 部下に向けて送るレビューコメントを出力すること。
- 部下のことは「あなた」と呼ぶこと。
- 専門用語は適切に使用し、その概念も簡潔に説明すること。
# 思考プロセス
1. レビュー対象のcsvファイルの内容を深く理解する。
2. 欠損値: 各列に欠損値（空欄、NaNなど）がどの程度含まれているかを特定し、ある場合指摘する。
3. 重複: 重複している行がないか確認し、ある場合指摘する。
4. データ形式: 各列のデータ型が適切か（例：日付列に文字列が含まれていないか）を検証。
5. 外れ値: 異常に大きい、または小さい値（外れ値）がないか確認し、ある場合指摘する。
6. レビューコメントを作成する。
7. レビューコメントを簡潔にまとめる。
#制限
1.各項目の文章を2行までに制限
2.具体的な修正箇所の提示をする
3.項目ごとに空行を使い、綺麗に文章を統一しなさい
"""
    return prompt


def make_code_beginner_prompt(input):
    prompt=f"""
# 命令書
あなたは高度な技術を持つチームリーダーです。 以下の指示とレビューコメント案に基づき、初級者の部下が指導内容を深く理解できるような、レビューコメントを作成してください。
# 入力文
{input}
# 回答の条件
- 解答は，「お疲れ様です」から始めてください。
- レビュー対象は、部下が書いたコードです。
- 上司の指摘の核となる意図を1～2文で簡潔にまとめること。
- 部下に向けて送るレビューコメントやコードを出力すること。
- 部下のことは「あなた」と呼ぶこと。
- 専門用語は使用せず、簡潔に分かりやすく説明すること。
# 思考プロセス
1. レビュー対象のコードの内容を深く理解する。
2. レビュー対象のコードを読んで、指摘内容を全て洗い出す。
3. レビューコメントを作成する。
4. レビューコメントを簡潔にまとめる。
#制限
1.各項目の文章を2行までに制限
2.項目ごとに空行を使い、綺麗に文章を統一しなさい
3.必要に応じてコードの出力をしなさい
4.コードを出力する場合、編集された全体のコードのみを最後に出力しなさい
    """
    return prompt

def make_final_prompt(input_text, input_file=None):
    # with open(media_file, "r", encoding="utf-8") as f:
    #     # 全部読み込む
    #     media_content = f.read()
    file_content = input_file.getvalue().decode("utf-8")
    # プロンプトを作成
    input = f"""
# レビュー対象のもの
{input_text}
# 指摘ポイント
{file_content}
"""
    if input_file is not None:
        # ファイル名から拡張子を取得
        file_name = input_file.name
        extension = os.path.splitext(file_name)[1].lower()

        if extension == ".csv":
            prompt = make_csv_prompt(input)
        elif extension == ".txt":
            prompt = make_txt_prompt(input)
        else:
            prompt = make_code_beginner_prompt(input)
    return prompt